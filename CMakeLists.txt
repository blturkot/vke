cmake_minimum_required (VERSION 2.6)

set(ENGINE_NAME "vkEngine")
set(CORE_ENGINE_NAME "${ENGINE_NAME}_Core")
set(VULKAN_RENDERER_ENGINE_NAME "${ENGINE_NAME}_VulkanRenderer")
set(SCENE_ENGINE_NAME "${ENGINE_NAME}_Scene")
set(BIN_DIR "${CMAKE_CURRENT_SOURCE_DIR}/bin")
set(LIB_DIR "${BIN_DIR}")
set(INC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include/vke")
SET(SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
SET(THIRD_PARTY_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/ThirdParty")
SET(LIB_TYPE)

#vkEngine_Core

set(LIB_NAME "${CORE_ENGINE_NAME}")
set(LIB_INCLUDE_DIR_PATH "Core")
set(LIB_SOURCE_DIR_PATH "Core")
include(EngineLib.cmake NO_POLICY_SCOPE)
set(CORE_ENGINE_LIB_RELEASE_NAME "${LIB_RELEASE_NAME}")
set(CORE_ENGINE_LIB_DEBUG_NAME "${LIB_DEBUG_NAME}")

#vkEngine_VulkanRenderer
set(LIB_NAME "${VULKAN_RENDERER_ENGINE_NAME}")
set(LIB_INCLUDE_DIR_PATH "RenderSystem/Vulkan")
set(LIB_SOURCE_DIR_PATH "RenderSystem/Vulkan")
include(EngineLib.cmake NO_POLICY_SCOPE)
set(VULKAN_RENDERER_ENGINE_LIB_RELEASE_NAME "${LIB_RELEASE_NAME}")
set(VULKAN_RENDERER_ENGINE_LIB_DEBUG_NAME "${LIB_DEBUG_NAME}")

#vkEngine_Scene
set(LIB_NAME "${SCENE_ENGINE_NAME}")
set(LIB_INCLUDE_DIR_PATH "Scene")
set(LIB_SOURCE_DIR_PATH "Scene")
include(EngineLib.cmake NO_POLICY_SCOPE)
set(SCENE_ENGINE_LIB_RELEASE_NAME "${LIB_RELEASE_NAME}")
set(SCENE_ENGINE_LIB_DEBUG_NAME "${LIB_DEBUG_NAME}")

#vkEngine
SET(LIB_TYPE SHARED)
set(LIB_NAME "${ENGINE_NAME}")
SET(FILES_RECURSE_DISABLED 1)
set(LIB_INCLUDE_DIR_PATH "CVKEngine.h")
set(LIB_SOURCE_DIR_PATH "CVKEngine.cpp")
include(EngineLib.cmake NO_POLICY_SCOPE)
set(SCENE_ENGINE_LIB_RELEASE_NAME "${LIB_RELEASE_NAME}")
set(SCENE_ENGINE_LIB_DEBUG_NAME "${LIB_DEBUG_NAME}")

add_dependencies(${ENGINE_NAME} "${CORE_ENGINE_NAME}")
add_dependencies(${ENGINE_NAME} "${VULKAN_RENDERER_ENGINE_NAME}")
add_dependencies(${ENGINE_NAME} "${SCENE_ENGINE_NAME}")
set(LINK_LIB optimized ${CORE_ENGINE_LIB_RELEASE_NAME} debug ${CORE_ENGINE_LIB_DEBUG_NAME})
#set(LINK_LIB optimized ${VULKAN_RENDERER_ENGINE_LIB_RELEASE_NAME} debug ${VULKAN_RENDERER_ENGINE_LIB_DEBUG_NAME})
#set(LINK_LIB optimized ${SCENE_ENGINE_LIB_RELEASE_NAME} debug ${SCENE_ENGINE_LIB_DEBUG_NAME})
target_link_libraries(${ENGINE_NAME} ${LINK_LIB})
set_target_properties(${ENGINE_NAME} PROPERTIES LINKER_LANGUAGE CXX)

# SAMPLES

set(SAMPLE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/samples")
set(INC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include")
SUBDIRLIST(SAMPLE_SUBDIRS ${SAMPLE_DIR})

foreach(DIR ${SAMPLE_SUBDIRS})
    message(${DIR})
    set(FULLPATH_DIR "${SAMPLE_DIR}/${DIR}")
    project(${DIR} C CXX)
    set(APP_RELEASE_NAME "${PROJECT_NAME}${ARCHITECTURE}")
    set(APP_DEBUG_NAME "${APP_RELEASE_NAME}_d")
    file(GLOB_RECURSE FILES ${FULLPATH_DIR}/*.h ${FULLPATH_DIR}/*.cpp)
    
    include_directories(${INC_DIR})
    link_directories(${LIB_DIR} ${BIN_DIR} ${LIB_SYMBOL_DEBUG_DIR} ${LIB_SYMBOL_RELEASE_DIR})
    
    add_executable(${PROJECT_NAME} ${FILES})
    add_dependencies(${PROJECT_NAME} vkEngine)
    message("${PROJECT_NAME}->${ENGINE_NAME}")
    
    set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME_DEBUG ${APP_DEBUG_NAME})
    set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME_RELEASE ${APP_RELEASE_NAME})
    set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BIN_DIR})
    set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BIN_DIR})
    
    set(LINK_LIB optimized ${LIB_RELEASE_NAME} debug ${LIB_DEBUG_NAME})
    target_link_libraries(${PROJECT_NAME} ${LINK_LIB})
endforeach()