#ifndef VKE_VK_FUNCTION
#	define VKE_VK_FUNCTION(_name) extern PFN_##_name _name
#endif

VKE_VK_FUNCTION(vkDestroyBuffer);
VKE_VK_FUNCTION(vkCmdCopyQueryPoolResults);
VKE_VK_FUNCTION(vkDestroyPipelineCache);
VKE_VK_FUNCTION(vkDestroyImage);
VKE_VK_FUNCTION(vkEndCommandBuffer);
VKE_VK_FUNCTION(vkBindImageMemory);
VKE_VK_FUNCTION(vkResetDescriptorPool);
VKE_VK_FUNCTION(vkCmdEndRenderPass);
VKE_VK_FUNCTION(vkCmdSetDepthBounds);
VKE_VK_FUNCTION(vkCmdBeginRenderPass);
VKE_VK_FUNCTION(vkCreateRenderPass);
VKE_VK_FUNCTION(vkCmdWaitEvents);
VKE_VK_FUNCTION(vkCmdDrawIndexed);
VKE_VK_FUNCTION(vkDestroyFramebuffer);
VKE_VK_FUNCTION(vkCreateFence);
VKE_VK_FUNCTION(vkGetPhysicalDeviceMemoryProperties);
VKE_VK_FUNCTION(vkFreeDescriptorSets);
VKE_VK_FUNCTION(vkCreateFramebuffer);
VKE_VK_FUNCTION(vkDestroyDescriptorPool);
VKE_VK_FUNCTION(vkGetInstanceProcAddr);
VKE_VK_FUNCTION(vkEnumerateDeviceExtensionProperties);
VKE_VK_FUNCTION(vkCreateShaderModule);
VKE_VK_FUNCTION(vkAllocateDescriptorSets);
VKE_VK_FUNCTION(vkGetEventStatus);
VKE_VK_FUNCTION(vkCmdBindDescriptorSets);
VKE_VK_FUNCTION(vkGetPhysicalDeviceProperties);
VKE_VK_FUNCTION(vkGetPhysicalDeviceImageFormatProperties);
VKE_VK_FUNCTION(vkFlushMappedMemoryRanges);
VKE_VK_FUNCTION(vkCmdClearDepthStencilImage);
VKE_VK_FUNCTION(vkEnumerateInstanceExtensionProperties);
VKE_VK_FUNCTION(vkDebugReportMessageEXT);
VKE_VK_FUNCTION(vkDestroyInstance);
VKE_VK_FUNCTION(vkCmdSetStencilWriteMask);
VKE_VK_FUNCTION(vkGetImageSparseMemoryRequirements);
VKE_VK_FUNCTION(vkCmdSetScissor);
VKE_VK_FUNCTION(vkCmdResetEvent);
VKE_VK_FUNCTION(vkBeginCommandBuffer);
VKE_VK_FUNCTION(vkCmdBeginQuery);
VKE_VK_FUNCTION(vkDestroyEvent);
VKE_VK_FUNCTION(vkInvalidateMappedMemoryRanges);
VKE_VK_FUNCTION(vkCreateImageView);
VKE_VK_FUNCTION(vkQueueBindSparse);
VKE_VK_FUNCTION(vkDestroyDevice);
VKE_VK_FUNCTION(vkUnmapMemory);
VKE_VK_FUNCTION(vkCmdDrawIndexedIndirect);
VKE_VK_FUNCTION(vkCmdCopyImage);
VKE_VK_FUNCTION(vkCmdEndQuery);
VKE_VK_FUNCTION(vkCreateDescriptorSetLayout);
VKE_VK_FUNCTION(vkCreateGraphicsPipelines);
VKE_VK_FUNCTION(vkDestroySemaphore);
VKE_VK_FUNCTION(vkCmdSetStencilReference);
VKE_VK_FUNCTION(vkCreateSampler);
VKE_VK_FUNCTION(vkCmdResolveImage);
VKE_VK_FUNCTION(vkCmdCopyImageToBuffer);
VKE_VK_FUNCTION(vkCmdCopyBuffer);
VKE_VK_FUNCTION(vkCmdFillBuffer);
VKE_VK_FUNCTION(vkDestroyShaderModule);
VKE_VK_FUNCTION(vkSetEvent);
VKE_VK_FUNCTION(vkCreateBufferView);
VKE_VK_FUNCTION(vkDestroyCommandPool);
VKE_VK_FUNCTION(vkDeviceWaitIdle);
VKE_VK_FUNCTION(vkDestroyImageView);
VKE_VK_FUNCTION(vkDestroyDebugReportCallbackEXT);
VKE_VK_FUNCTION(vkFreeMemory);
VKE_VK_FUNCTION(vkCreateBuffer);
VKE_VK_FUNCTION(vkCreateDebugReportCallbackEXT);
VKE_VK_FUNCTION(vkCmdResetQueryPool);
VKE_VK_FUNCTION(vkResetCommandPool);
VKE_VK_FUNCTION(vkResetCommandBuffer);
VKE_VK_FUNCTION(vkCreateImage);
VKE_VK_FUNCTION(vkCmdExecuteCommands);
VKE_VK_FUNCTION(vkDestroyPipelineLayout);
VKE_VK_FUNCTION(vkGetImageMemoryRequirements);
VKE_VK_FUNCTION(vkDestroyBufferView);
VKE_VK_FUNCTION(vkGetQueryPoolResults);
VKE_VK_FUNCTION(vkGetDeviceProcAddr);
VKE_VK_FUNCTION(vkQueueWaitIdle);
VKE_VK_FUNCTION(vkGetPhysicalDeviceSparseImageFormatProperties);
VKE_VK_FUNCTION(vkCreatePipelineLayout);
VKE_VK_FUNCTION(vkGetDeviceQueue);
VKE_VK_FUNCTION(vkQueueSubmit);
VKE_VK_FUNCTION(vkCmdSetViewport);
VKE_VK_FUNCTION(vkBindBufferMemory);
VKE_VK_FUNCTION(vkAllocateCommandBuffers);
VKE_VK_FUNCTION(vkMergePipelineCaches);
VKE_VK_FUNCTION(vkCmdBlitImage);
VKE_VK_FUNCTION(vkGetImageSubresourceLayout);
VKE_VK_FUNCTION(vkWaitForFences);
VKE_VK_FUNCTION(vkCreateQueryPool);
VKE_VK_FUNCTION(vkCmdSetStencilCompareMask);
VKE_VK_FUNCTION(vkDestroyFence);
VKE_VK_FUNCTION(vkGetBufferMemoryRequirements);
VKE_VK_FUNCTION(vkCmdSetEvent);
VKE_VK_FUNCTION(vkCmdBindPipeline);
VKE_VK_FUNCTION(vkCmdCopyBufferToImage);
VKE_VK_FUNCTION(vkCreateEvent);
VKE_VK_FUNCTION(vkDestroySampler);
VKE_VK_FUNCTION(vkCmdUpdateBuffer);
VKE_VK_FUNCTION(vkCmdSetDepthBias);
VKE_VK_FUNCTION(vkEnumerateDeviceLayerProperties);
VKE_VK_FUNCTION(vkCmdDispatchIndirect);
VKE_VK_FUNCTION(vkDestroyQueryPool);
VKE_VK_FUNCTION(vkEnumerateInstanceLayerProperties);
VKE_VK_FUNCTION(vkGetPhysicalDeviceFormatProperties);
VKE_VK_FUNCTION(vkGetRenderAreaGranularity);
VKE_VK_FUNCTION(vkGetDeviceMemoryCommitment);
VKE_VK_FUNCTION(vkResetFences);
VKE_VK_FUNCTION(vkCmdClearColorImage);
VKE_VK_FUNCTION(vkDestroyDescriptorSetLayout);
VKE_VK_FUNCTION(vkCreateCommandPool);
VKE_VK_FUNCTION(vkCreateDevice);
VKE_VK_FUNCTION(vkGetPipelineCacheData);
VKE_VK_FUNCTION(vkGetFenceStatus);
VKE_VK_FUNCTION(vkCmdDrawIndirect);
VKE_VK_FUNCTION(vkResetEvent);
VKE_VK_FUNCTION(vkCreateComputePipelines);
VKE_VK_FUNCTION(vkCreateInstance);
VKE_VK_FUNCTION(vkCmdClearAttachments);
VKE_VK_FUNCTION(vkCreateSemaphore);
VKE_VK_FUNCTION(vkAllocateMemory);
VKE_VK_FUNCTION(vkCmdBindIndexBuffer);
VKE_VK_FUNCTION(vkCmdDispatch);
VKE_VK_FUNCTION(vkMapMemory);
VKE_VK_FUNCTION(vkCmdDraw);
VKE_VK_FUNCTION(vkCreatePipelineCache);
VKE_VK_FUNCTION(vkCmdWriteTimestamp);
VKE_VK_FUNCTION(vkCmdSetBlendConstants);
VKE_VK_FUNCTION(vkCreateDescriptorPool);
VKE_VK_FUNCTION(vkFreeCommandBuffers);
VKE_VK_FUNCTION(vkCmdSetLineWidth);
VKE_VK_FUNCTION(vkEnumeratePhysicalDevices);
VKE_VK_FUNCTION(vkUpdateDescriptorSets);
VKE_VK_FUNCTION(vkCmdBindVertexBuffers);
VKE_VK_FUNCTION(vkGetPhysicalDeviceFeatures);
VKE_VK_FUNCTION(vkCmdPipelineBarrier);
VKE_VK_FUNCTION(vkGetPhysicalDeviceQueueFamilyProperties);
VKE_VK_FUNCTION(vkCmdNextSubpass);
VKE_VK_FUNCTION(vkDestroyPipeline);
VKE_VK_FUNCTION(vkDestroyRenderPass);
VKE_VK_FUNCTION(vkCmdPushConstants);
VKE_VK_FUNCTION(vkDebugReportCallbackEXT);
#if VKE_USE_VULKAN_WINDOWS
VKE_VK_FUNCTION(vkGetPhysicalDeviceWin32PresentationSupportKHR);
VKE_VK_FUNCTION(vkCreateWin32SurfaceKHR);
#endif // VKE_USE_VULKAN_WINDOWS
#if VKE_USE_VULKAN_LINUX
#endif // VKE_USE_VULKAN_LINUX
#if VKE_USE_VULKAN_ANDROID
VKE_VK_FUNCTION(vkCreateAndroidSurfaceKHR);
#endif // VKE_USE_VULKAN_ANDROID
#if VKE_USE_VULKAN_WSI
#endif // VKE_USE_VULKAN_WSI
#if VKE_USE_VULKAN_KHR
VKE_VK_FUNCTION(vkGetPhysicalDeviceDisplayPropertiesKHR);
VKE_VK_FUNCTION(vkCreateDisplayModeKHR);
VKE_VK_FUNCTION(vkGetDisplayPlaneCapabilitiesKHR);
VKE_VK_FUNCTION(vkGetSwapchainImagesKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceSurfaceFormatsKHR);
VKE_VK_FUNCTION(vkGetDisplayModePropertiesKHR);
VKE_VK_FUNCTION(vkDestroySwapchainKHR);
VKE_VK_FUNCTION(vkCreateSharedSwapchainsKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceXlibPresentationSupportKHR);
VKE_VK_FUNCTION(vkCreateXlibSurfaceKHR);
VKE_VK_FUNCTION(vkCreateXcbSurfaceKHR);
VKE_VK_FUNCTION(vkAcquireNextImageKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceSurfaceSupportKHR);
VKE_VK_FUNCTION(vkGetDisplayPlaneSupportedDisplaysKHR);
VKE_VK_FUNCTION(vkCreateWaylandSurfaceKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceXcbPresentationSupportKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceWaylandPresentationSupportKHR);
VKE_VK_FUNCTION(vkDestroySurfaceKHR);
VKE_VK_FUNCTION(vkQueuePresentKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceSurfacePresentModesKHR);
VKE_VK_FUNCTION(vkCreateDisplayPlaneSurfaceKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceSurfaceCapabilitiesKHR);
VKE_VK_FUNCTION(vkCreateSwapchainKHR);
VKE_VK_FUNCTION(vkGetPhysicalDeviceDisplayPlanePropertiesKHR);
#endif // VKE_USE_VULKAN_KHR
#undef VKE_VK_FUNCTION
